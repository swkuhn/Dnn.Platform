ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Article
	ADD IsNewWindow bit NOT NULL CONSTRAINT DF_{objectQualifier}DnnForge_NewsArticles_Article_IsNewWindow DEFAULT 0
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_AddArticle
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_AddArticle
	@AuthorID int,
	@ApproverID int,
	@CreatedDate datetime,
	@LastUpdate datetime,
	@Title nvarchar(255),
	@Summary ntext,
	@IsApproved bit,
	@NumberOfViews int,
	@IsDraft bit,
	@StartDate DateTime,
	@EndDate DateTime,
	@ModuleID int,
	@ImageUrl nvarchar(255),
	@IsFeatured bit, 
	@LastUpdateID int, 
	@Url nvarchar(255),
	@IsSecure bit,
	@IsNewWindow bit 
AS

INSERT INTO {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Article (
	[AuthorID],
	[ApproverID],
	[CreatedDate],
	[LastUpdate],
	[Title],
	[Summary],
	[IsApproved],
	[NumberOfViews],
	[IsDraft],
	[StartDate],
	[EndDate],
	[ModuleID],
	[ImageUrl],
	[IsFeatured], 
	[LastUpdateID], 
	[Url],
	[IsSecure],
	[IsNewWindow] 
) VALUES (
	@AuthorID,
	@ApproverID,
	@CreatedDate,
	@LastUpdate,
	@Title,
	@Summary,
	@IsApproved,
	@NumberOfViews,
	@IsDraft,
	@StartDate,
	@EndDate,
	@ModuleID,
	@ImageUrl,
	@IsFeatured,
	@LastUpdateID,
	@Url,
	@IsSecure,
	@IsNewWindow    
)

select SCOPE_IDENTITY()
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_UpdateArticle
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_UpdateArticle
	@ArticleID int, 
	@AuthorID int, 
	@ApproverID int, 
	@CreatedDate datetime, 
	@LastUpdate datetime, 
	@Title nvarchar(255), 
	@Summary ntext, 
	@IsApproved bit, 
	@NumberOfViews int, 
	@IsDraft bit,
	@StartDate DateTime,
	@EndDate DateTime,
	@ModuleID int,
	@ImageUrl nvarchar(255),
	@IsFeatured bit, 
	@LastUpdateID int, 
	@Url nvarchar(255),
	@IsSecure bit,
	@IsNewWindow bit 
AS

UPDATE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Article SET
	[AuthorID] = @AuthorID,
	[ApproverID] = @ApproverID,
	[CreatedDate] = @CreatedDate,
	[LastUpdate] = @LastUpdate,
	[Title] = @Title,
	[Summary] = @Summary,
	[IsApproved] = @IsApproved,
	[NumberOfViews] = @NumberOfViews,
	[IsDraft] = @IsDraft,
	[StartDate] = @StartDate,
	[EndDate] = @EndDate,
	[ModuleID] = @ModuleID,
	[ImageUrl] = @ImageUrl,
	[IsFeatured] = @IsFeatured, 
	[LastUpdateID] = @LastUpdateID, 
	[Url] = @Url,
	[IsSecure] = @IsSecure,
	[IsNewWindow] = @IsNewWindow    
WHERE
	[ArticleID] = @ArticleID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticle
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticle
	@ArticleID int
AS
SELECT
	Article.[ArticleID],
	Article.[AuthorID],
	Article.[ApproverID],
	Article.[CreatedDate],
	Article.[LastUpdate],
	Article.[Title],
	Article.[Summary],
	Article.[IsApproved],
	Article.[NumberOfViews],
	Article.[IsDraft],
	Article.[StartDate],
	Article.[EndDate],
	Article.[ModuleID],
	Article.[IsFeatured],
	Article.[ImageUrl],
	Article.[LastUpdateID],
	Article.[IsSecure],
	Article.[IsNewWindow],
	'' as AuthorEmail,
	Author.[UserName] as AuthorUserName,
	Author.[FirstName] as AuthorFirstName,
	Author.[LastName] as AuthorLastName,
	'' as LastUpdateEmail,
	Updated.[UserName] as LastUpdateUserName,
	Updated.[FirstName] as LastUpdateFirstName,
	Updated.[LastName] as LastUpdateLastName,
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment.ArticleID = Article.ArticleID) as 'CommentCount', 
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Page where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Page.ArticleID = Article.ArticleID) as 'PageCount', 
	(select AVG(rating) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'Rating', 
	(select COUNT(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'RatingCount', 
	case when Images.FileName is null then '' else Images.Folder + Images.FileName end AS ImageUrlResolved, 
	case when UrlFiles.FileName is null then Article.URL else UrlFiles.Folder + UrlFiles.FileName end AS URL 

FROM
	{databaseOwner}{objectQualifier}DnnForge_NewsArticles_Article Article LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Files UrlFiles ON Article.URL = 'fileid=' + CONVERT(nvarchar, UrlFiles.FileID) LEFT OUTER JOIN
        {databaseOwner}{objectQualifier}Files Images ON Article.ImageUrl = 'fileid=' + CONVERT(nvarchar, Images.FileID) 

WHERE	
	Article.[ArticleID] = @ArticleID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleList
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleList
	@ModuleID	int
AS

SELECT
	Article.[ArticleID],
	Article.[AuthorID],
	Article.[ApproverID],
	Article.[CreatedDate],
	Article.[LastUpdate],
	Article.[Title],
	Article.[Summary],
	Article.[IsApproved],
	Article.[NumberOfViews],
	Article.[IsDraft],
	Article.[StartDate],
	Article.[EndDate],
	Article.[ModuleID],
	Article.[IsFeatured],
	Article.[ImageUrl],
	Article.[LastUpdateID],
	Article.[IsSecure],
	Article.[IsNewWindow],
	'' as AuthorEmail,
	Author.[UserName] as AuthorUserName,
	Author.[FirstName] as AuthorFirstName,
	Author.[LastName] as AuthorLastName,
	'' as LastUpdateEmail,
	Updated.[UserName] as LastUpdateUserName,
	Updated.[FirstName] as LastUpdateFirstName,
	Updated.[LastName] as LastUpdateLastName,
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment.ArticleID = Article.ArticleID) as 'CommentCount', 
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Page where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Page.ArticleID = Article.ArticleID) as 'PageCount', 
	(select AVG(rating) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'Rating', 
	(select COUNT(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'RatingCount', 
	case when Images.FileName is null then '' else Images.Folder + Images.FileName end AS ImageUrlResolved, 
	case when UrlFiles.FileName is null then Article.URL else UrlFiles.Folder + UrlFiles.FileName end AS URL 

FROM
	{databaseOwner}{objectQualifier}DnnForge_NewsArticles_Article Article LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Files UrlFiles ON Article.URL = 'fileid=' + CONVERT(nvarchar, UrlFiles.FileID) LEFT OUTER JOIN
        {databaseOwner}{objectQualifier}Files Images ON Article.ImageUrl = 'fileid=' + CONVERT(nvarchar, Images.FileID) 
WHERE	
	Article.[ModuleID] = @ModuleID

ORDER BY 
	Article.[CreatedDate] DESC
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleListByApproved
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleListByApproved
	@ModuleID	int,
	@IsApproved	bit
AS

SELECT
	Article.[ArticleID],
	Article.[AuthorID],
	Article.[ApproverID],
	Article.[CreatedDate],
	Article.[LastUpdate],
	Article.[Title],
	Article.[Summary],
	Article.[IsApproved],
	Article.[NumberOfViews],
	Article.[IsDraft],
	Article.[StartDate],
	Article.[EndDate],
	Article.[ModuleID],
	Article.[IsFeatured],
	Article.[ImageUrl],
	Article.[LastUpdateID],
	Article.[IsSecure],
	Article.[IsNewWindow],
	'' as AuthorEmail,
	Author.[UserName] as AuthorUserName,
	Author.[FirstName] as AuthorFirstName,
	Author.[LastName] as AuthorLastName,
	'' as LastUpdateEmail,
	Updated.[UserName] as LastUpdateUserName,
	Updated.[FirstName] as LastUpdateFirstName,
	Updated.[LastName] as LastUpdateLastName,
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment.ArticleID = Article.ArticleID) as 'CommentCount',
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Page where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Page.ArticleID = Article.ArticleID) as 'PageCount', 
	(select AVG(rating) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'Rating', 
	(select COUNT(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'RatingCount', 
	case when Images.FileName is null then '' else Images.Folder + Images.FileName end AS ImageUrlResolved, 
	case when UrlFiles.FileName is null then Article.URL else UrlFiles.Folder + UrlFiles.FileName end AS URL  

FROM
	{databaseOwner}{objectQualifier}DnnForge_NewsArticles_Article Article LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Files UrlFiles ON Article.URL = 'fileid=' + CONVERT(nvarchar, UrlFiles.FileID) LEFT OUTER JOIN
        {databaseOwner}{objectQualifier}Files Images ON Article.ImageUrl = 'fileid=' + CONVERT(nvarchar, Images.FileID) 

WHERE	
	Article.[ModuleID] = @ModuleID
	AND
	Article.[IsApproved] = @IsApproved
	AND
	Article.[IsDraft] = 0 

ORDER BY 
	Article.[CreatedDate] DESC
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleListByAuthor
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleListByAuthor
	@ModuleID	int,
	@AuthorID	int
AS

SELECT
	Article.[ArticleID],
	Article.[AuthorID],
	Article.[ApproverID],
	Article.[CreatedDate],
	Article.[LastUpdate],
	Article.[Title],
	Article.[Summary],
	Article.[IsApproved],
	Article.[NumberOfViews],
	Article.[IsDraft],
	Article.[StartDate],
	Article.[EndDate],
	Article.[ModuleID],
	Article.[IsFeatured],
	Article.[ImageUrl],
	Article.[LastUpdateID],
	Article.[IsSecure],
	Article.[IsNewWindow],
	'' as AuthorEmail,
	Author.[UserName] as AuthorUserName,
	Author.[FirstName] as AuthorFirstName,
	Author.[LastName] as AuthorLastName,
	'' as LastUpdateEmail,
	Updated.[UserName] as LastUpdateUserName,
	Updated.[FirstName] as LastUpdateFirstName,
	Updated.[LastName] as LastUpdateLastName,
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment.ArticleID = Article.ArticleID) as 'CommentCount', 
	(select AVG(rating) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'Rating', 
	(select COUNT(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'RatingCount', 
	case when Images.FileName is null then '' else Images.Folder + Images.FileName end AS ImageUrlResolved, 
	case when UrlFiles.FileName is null then Article.URL else UrlFiles.Folder + UrlFiles.FileName end AS URL 

FROM
	{databaseOwner}{objectQualifier}DnnForge_NewsArticles_Article Article LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Files UrlFiles ON Article.URL = 'fileid=' + CONVERT(nvarchar, UrlFiles.FileID) LEFT OUTER JOIN
        {databaseOwner}{objectQualifier}Files Images ON Article.ImageUrl = 'fileid=' + CONVERT(nvarchar, Images.FileID) 
WHERE	
	Article.[ModuleID] = @ModuleID
	AND
	Article.[AuthorID] = @AuthorID

ORDER BY 
	Article.[CreatedDate] DESC
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleListByAuthorByStatus
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleListByAuthorByStatus
	@ModuleID	int,
	@AuthorID	int,
	@IsApproved	bit,
	@IsDraft	bit 
AS

SELECT
	Article.[ArticleID],
	Article.[AuthorID],
	Article.[ApproverID],
	Article.[CreatedDate],
	Article.[LastUpdate],
	Article.[Title],
	Article.[Summary],
	Article.[IsApproved],
	Article.[NumberOfViews],
	Article.[IsDraft],
	Article.[StartDate],
	Article.[EndDate],
	Article.[ModuleID],
	Article.[IsFeatured],
	Article.[ImageUrl],
	Article.[LastUpdateID],
	Article.[IsSecure],
	Article.[IsNewWindow],
	'' as AuthorEmail,
	Author.[UserName] as AuthorUserName,
	Author.[FirstName] as AuthorFirstName,
	Author.[LastName] as AuthorLastName,
	'' as LastUpdateEmail,
	Updated.[UserName] as LastUpdateUserName,
	Updated.[FirstName] as LastUpdateFirstName,
	Updated.[LastName] as LastUpdateLastName,
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Comment.ArticleID = Article.ArticleID) as 'CommentCount', 
	(select AVG(rating) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'Rating', 
	(select COUNT(*) from {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating where {databaseOwner}{objectQualifier}DnnForge_NewsArticles_Rating.ArticleID = Article.ArticleID) as 'RatingCount', 
	case when Images.FileName is null then '' else Images.Folder + Images.FileName end AS ImageUrlResolved, 
	case when UrlFiles.FileName is null then Article.URL else UrlFiles.Folder + UrlFiles.FileName end AS URL 

FROM
	{databaseOwner}{objectQualifier}DnnForge_NewsArticles_Article Article LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Files UrlFiles ON Article.URL = 'fileid=' + CONVERT(nvarchar, UrlFiles.FileID) LEFT OUTER JOIN
        {databaseOwner}{objectQualifier}Files Images ON Article.ImageUrl = 'fileid=' + CONVERT(nvarchar, Images.FileID) 
WHERE	
	Article.[ModuleID] = @ModuleID
	AND
	Article.[AuthorID] = @AuthorID
	AND
	Article.[IsApproved] = @IsApproved
	AND
	Article.[IsDraft] = @IsDraft

ORDER BY 
	Article.[CreatedDate] DESC
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleListBySearchCriteria
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_NewsArticles_GetArticleListBySearchCriteria
	@ModuleID	int,
	@CategoryID	varchar(255),
	@MaxCount	int,
	@MaxAge	int,
	@IsApproved	int,
	@StartDate	datetime,
	@KeyWords	varchar(255), 
	@ShowHiddenAndExpired	bit, 
	@AuthorID	int,
	@ShowFeaturedOnly bit,
	@SortBy varchar(50),
	@Month	int,
	@Year	int 
AS
GO
